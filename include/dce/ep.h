/* Generated by IDL compiler version OSF DCE T1.1.0-03 */
#ifndef ept_v3_0_included
#define ept_v3_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rpctypes_v0_0_included
#include <dce/rpctypes.h>
#endif
#define ept_max_annotation_size (64)
typedef struct ept_v3_0_0_tag {
uuid_t object;
twr_p_t tower;
idl_char annotation[64];
} ept_entry_t;
typedef ept_entry_t *ept_entry_p_t;
typedef idl_void_p_t ept_lookup_handle_t;
extern void ept_insert(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 num_ents,
    /* [in] */ ept_entry_t entries[],
    /* [in] */ boolean32 replace,
    /* [out] */ error_status_t *status
);
extern void ept_delete(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 num_ents,
    /* [in] */ ept_entry_t entries[],
    /* [out] */ error_status_t *status
);
extern void ept_lookup(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 inquiry_type,
    /* [in] */ uuid_p_t object,
    /* [in] */ rpc_if_id_p_t interface_id,
    /* [in] */ unsigned32 vers_option,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [in] */ unsigned32 max_ents,
    /* [out] */ unsigned32 *num_ents,
    /* [out] */ ept_entry_t entries[],
    /* [out] */ error_status_t *status
);
extern void ept_map(
    /* [in] */ handle_t h,
    /* [in] */ uuid_p_t object,
    /* [in] */ twr_p_t map_tower,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [in] */ unsigned32 max_towers,
    /* [out] */ unsigned32 *num_towers,
    /* [out] */ twr_p_t towers[],
    /* [out] */ error_status_t *status
);
extern void ept_lookup_handle_free(
    /* [in] */ handle_t h,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [out] */ error_status_t *status
);
extern void ept_inq_object(
    /* [in] */ handle_t h,
    /* [out] */ uuid_t *ept_object,
    /* [out] */ error_status_t *status
);
extern void ept_mgmt_delete(
    /* [in] */ handle_t h,
    /* [in] */ boolean32 object_speced,
    /* [in] */ uuid_p_t object,
    /* [in] */ twr_p_t tower,
    /* [out] */ error_status_t *status
);
void ept_lookup_handle_t_rundown(
    rpc_ss_context_t context_handle
);
typedef struct ept_v3_0_epv_t {
void (*ept_insert)(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 num_ents,
    /* [in] */ ept_entry_t entries[],
    /* [in] */ boolean32 replace,
    /* [out] */ error_status_t *status
);
void (*ept_delete)(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 num_ents,
    /* [in] */ ept_entry_t entries[],
    /* [out] */ error_status_t *status
);
void (*ept_lookup)(
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 inquiry_type,
    /* [in] */ uuid_p_t object,
    /* [in] */ rpc_if_id_p_t interface_id,
    /* [in] */ unsigned32 vers_option,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [in] */ unsigned32 max_ents,
    /* [out] */ unsigned32 *num_ents,
    /* [out] */ ept_entry_t entries[],
    /* [out] */ error_status_t *status
);
void (*ept_map)(
    /* [in] */ handle_t h,
    /* [in] */ uuid_p_t object,
    /* [in] */ twr_p_t map_tower,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [in] */ unsigned32 max_towers,
    /* [out] */ unsigned32 *num_towers,
    /* [out] */ twr_p_t towers[],
    /* [out] */ error_status_t *status
);
void (*ept_lookup_handle_free)(
    /* [in] */ handle_t h,
    /* [in, out] */ ept_lookup_handle_t *entry_handle,
    /* [out] */ error_status_t *status
);
void (*ept_inq_object)(
    /* [in] */ handle_t h,
    /* [out] */ uuid_t *ept_object,
    /* [out] */ error_status_t *status
);
void (*ept_mgmt_delete)(
    /* [in] */ handle_t h,
    /* [in] */ boolean32 object_speced,
    /* [in] */ uuid_p_t object,
    /* [in] */ twr_p_t tower,
    /* [out] */ error_status_t *status
);
} ept_v3_0_epv_t;
extern ept_v3_0_epv_t ept_v3_0_c_epv;
extern rpc_if_handle_t ept_v3_0_c_ifspec;
extern rpc_if_handle_t ept_v3_0_s_ifspec;

#ifdef __cplusplus
    }
#endif

#endif
